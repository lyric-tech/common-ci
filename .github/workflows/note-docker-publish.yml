name: Build and publish docker

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_DEFAULT_REGION:
        required: true

permissions:
  id-token: write
  contents: read 
  
jobs:
  docker_publish:
    name: Build and Publish Notes Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        role-duration-seconds: 900

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
      run: |
        # Build a docker container and push it to ECR 
        docker pull ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ inputs.image_tag }} || true
        docker build --cache-from ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ inputs.image_tag }} -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ inputs.image_tag }} .

        echo "Pushing Image to ECR..."
        docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ inputs.image_tag }}
        echo "::group::Image Tag"
        echo "${{ inputs.image_tag }}"
        echo "::endgroup::"