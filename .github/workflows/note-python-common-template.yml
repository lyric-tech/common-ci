name: CI for Python Note Developers

on:
  workflow_call:
    inputs:
      NOTE_TAG:
        required: true
        type: string
      NOTE_REPOSITORY_NAME:
        required: true
        type: string
      NOTE_CI_TEMPLATE_VERSION:
        required: true
        type: string
    secrets:
      LYRIC_GITHUB_USERNAME:
        required: true
      LYRIC_GITHUB_TOKEN:
        required: true
      CHAINBRAIN_TOKEN:
        required: true
      ORG_ID:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_ECR_ROLE_ARN:
        required: true
      AWS_S3_ROLE_ARN:
        required: true
      ARTIFACT_S3_PATH:
        required: true
      GCP_WORKLOAD_IDENTITY:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true
      GCP_PROJECT_ID:
        required: true


permissions:
  id-token: write
  contents: write 
  repository-projects: write
  
jobs:
  #build_artifact:
  #  name: Build Artifact
  #  runs-on: ubuntu-latest
  #  container:
  #    image: python:3.10-slim
  #  steps:
  #    - name: Check out code
  #      uses: actions/checkout@v3
#
  #    - name: Set note env variables
  #      env:
  #        ORG_ID: ${{ secrets.ORG_ID }}
  #        NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
  #      run: |
  #        echo "NOTE_NAME=$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV
  #        echo "NOTE_IMAGE_REPO=$ORG_ID/note/$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV
#
  #    - name: Build artifact
  #      env:
  #        NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
  #      run: |
  #        echo "note_name & tag & repo: $NOTE_NAME, $NOTE_TAG, $NOTE_IMAGE_REPO"
  #        apt-get update && \
  #        apt-get install -y --no-install-recommends git
  #        curl -sSL https://install.python-poetry.org | python -
  #        pip install git+https://cb:sYxb63fXwm2BhB2MzFUy@gitlab.com/chainbrain/platform/chainbrain.git#main
  #        python -m chainbrain.utils.build_utils --version ${NOTE_TAG} --image-url $NOTE_IMAGE_REPO:$NOTE_TAG
  #        mv .lyric/build/artifact.zip .
#
  #    - name: Store artifact
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: artifact
  #        path: artifact.zip
  #        retention-days: 7

  docker_publish:
  # needs: build_artifact
    uses: ./.github/workflows/note-docker-publish.yml
    with:
      NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
      NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
      NOTE_CI_TEMPLATE_VERSION: ${{ inputs.NOTE_CI_TEMPLATE_VERSION }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ECR_ROLE_ARN }}
      ORG_ID: ${{ secrets.ORG_ID }}
      CHAINBRAIN_TOKEN: ${{ secrets.CHAINBRAIN_TOKEN }}
      LYRIC_GITHUB_USERNAME: ${{ secrets.LYRIC_GITHUB_USERNAME }}
      LYRIC_GITHUB_TOKEN: ${{ secrets.LYRIC_GITHUB_TOKEN }}
      GCP_WORKLOAD_IDENTITY: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}


  publish_artifact:
    needs: docker_publish
    uses: ./.github/workflows/note-artifact-publish.yml
    with:
      NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
      NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_S3_ROLE_ARN }}
      ARTIFACT_S3_PATH: ${{ secrets.ARTIFACT_S3_PATH }}
      GCP_WORKLOAD_IDENTITY: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

  promote_artifact:
    needs: publish_artifact
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v') == true && (contains(github.event.repository.name, 'datasource') == true || contains(github.event.repository.name, 'transformer'))
    uses: ./.github/workflows/note-artifact-promote.yml
    with:
      NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
      NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_S3_ROLE_ARN }}
      ARTIFACT_S3_PATH: ${{ secrets.ARTIFACT_S3_PATH }}
      GCP_WORKLOAD_IDENTITY: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
