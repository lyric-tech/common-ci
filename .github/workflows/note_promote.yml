name: Promote Notes to Customer Environment

on:
  workflow_call:
    inputs:
      NOTE_VERSION:
        required: true
        type: string
        description: 'Note version'
      NOTE_REPOSITORY_NAME:
        required: true
        type: string
        description: 'Note repository name'
      CUSTOMER_NAME:
        required: true
        type: string
        description: 'Customer name'
    secrets:
      AWS_DEFAULT_REGION:
        required: true
        description: 'AWS region'
      AWS_ROLE_ARN:
        required: true
        description: 'AWS role to assume'
      GCP_WORKLOAD_IDENTITY:
        required: true
        description: 'GCP workload identity'
      GCP_SERVICE_ACCOUNT:
        required: true
        description: 'GCP service account'
      GCP_PROJECT_ID:
        required: true
        description: 'GCP project id'
      AZURE_CONNECTIONSTRING:
        required: true
        description: 'Azure connection string'

permissions:
  id-token: write
  contents: write 
  repository-projects: write

jobs:
  note_promote:
    name: Promote Note to ${{ inputs.CUSTOMER_NAME }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900

      - name: Configure GCP Credentials
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
  
      - name: Set note env variables
        env:
          NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
        run: |
          echo "NOTE_NAME=$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV

      - name: Set note env variables
        env:
          NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
        run: |
          echo "NOTE_NAME=$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV

      - name: Upload note to ${{ inputs.CUSTOMER_NAME }} artifact
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          NOTE_VERSION: "${{ inputs.NOTE_VERSION == 'main' && 'latest' || inputs.NOTE_VERSION }}"
        run: |
          aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}
          aws s3 cp lyric-store-lyric/note_artifacts/lyric/${NOTE_NAME}/${NOTE_NAME}_${NOTE_VERSION}.zip lyric-store-lyric/note_artifacts/${{ inputs.CUSTOMER_NAME }}/${NOTE_NAME}/${NOTE_NAME}_${NOTE_VERSION}.zip
          gsutil cp gs://lyric-store-lyric/note_artifacts/lyric/${NOTE_NAME}/${NOTE_NAME}_${NOTE_TAG}.zip gs://lyric-store-lyric/note_artifacts/${{ inputs.CUSTOMER_NAME }}/${NOTE_NAME}/${NOTE_NAME}_${NOTE_VERSION}.zip
          