name: CI for Python Note Developers

on:
  workflow_call:
    inputs:
      NOTE_TAG:
        required: true
        type: string
      NOTE_REPOSITORY_NAME:
        required: true
        type: string
      NOTE_CI_TEMPLATE_VERSION:
        required: true
        type: string
    secrets:
      LYRIC_GITHUB_USERNAME:
        required: true
      LYRIC_GITHUB_TOKEN:
        required: true
      CHAINBRAIN_TOKEN:
        required: true
      ORG_ID:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_ECR_ROLE_ARN:
        required: true
      AWS_S3_ROLE_ARN:
        required: true
      ARTIFACT_S3_PATH:
        required: true

permissions:
  id-token: write
  contents: read

jobs:

  #docker_publish:
  #  uses: ./.github/workflows/note-docker-publish.yml
  #  with:
  #    NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
  #    NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
  #    NOTE_CI_TEMPLATE_VERSION: ${{ inputs.NOTE_CI_TEMPLATE_VERSION }}
  #  secrets:
  #    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  #    AWS_ROLE_ARN: ${{ secrets.AWS_ECR_ROLE_ARN }}
  #    ORG_ID: ${{ secrets.ORG_ID }}
  #    CHAINBRAIN_TOKEN: ${{ secrets.CHAINBRAIN_TOKEN }}
  #    LYRIC_GITHUB_USERNAME: ${{ secrets.LYRIC_GITHUB_USERNAME }}
  #    LYRIC_GITHUB_TOKEN: ${{ secrets.LYRIC_GITHUB_TOKEN }}

  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Print output
        run: |
          echo "${{ steps.login-ecr.outputs.registry }}"
          echo "${{ steps.login-ecr.outputs.docker_username_411564643746_dkr_ecr_us_east_1_amazonaws_com }}"
          echo "${{ steps.login-ecr.outputs.docker_password_411564643746_dkr_ecr_us_east_1_amazonaws_com }}"
          
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_411564643746_dkr_ecr_us_east_1_amazonaws_com }} # Need to remove hard code here
      docker_password: ${{ steps.login-ecr.outputs.docker_password_411564643746_dkr_ecr_us_east_1_amazonaws_com }}

  build_artifact:
    needs: [login-to-amazon-ecr]
    name: Build Artifact
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.NOTE_REPOSITORY_NAME }}:${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}
      credentials:
        username: AWS
        password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}      
    steps:
      - name: Set note env variables
        env:
          ORG_ID: ${{ secrets.ORG_ID }}
          NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
        run: |
          echo "NOTE_NAME=$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV
          echo "NOTE_IMAGE_REPO=$ORG_ID/note/$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV

      - name: Build artifact
        env:
          NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
        run: |
          echo "note_name & tag & repo: $NOTE_NAME, $NOTE_TAG, $NOTE_IMAGE_REPO"
          python -m chainbrain.utils.build_utils --version ${NOTE_TAG} --image-url $NOTE_IMAGE_REPO:$NOTE_TAG
          mv .lyric/build/artifact.zip .

      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: artifact.zip
          retention-days: 7

  publish_artifact:
    needs: build_artifact
    uses: ./.github/workflows/note-artifact-publish.yml
    with:
      NOTE_TAG: "${{ inputs.NOTE_TAG == 'main' && 'latest' || inputs.NOTE_TAG }}"
      NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_S3_ROLE_ARN }}
      ARTIFACT_S3_PATH: ${{ secrets.ARTIFACT_S3_PATH }}
