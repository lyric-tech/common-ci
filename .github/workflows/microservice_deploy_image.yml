name: Deploy to Kubernetes Cluster

on:
  workflow_call:
    inputs:
      IMAGE_TAG:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_DEFAULT_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      KUBE_CONFIG_DATA:
        required: true
      ECR_REGISTRY:
        required: true
      AWS_ROLE_ARN:
          required: true
      NAMESPACE:
        required: true

permissions:
  id-token: write
  contents: read 
  
jobs:
  kube_deploy:
    name: Deploy to ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_DEFAULT_REGION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Deploy to Cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"
        NAMESPACE: ${{ secrets.NAMESPACE }}
      with:
        args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n $NAMESPACE