name: Promote artifact to Customer Environment

on:
  workflow_call:
    inputs:
      NOTE_TAG:
        required: true
        type: string
      NOTE_REPOSITORY_NAME:
        required: true
        type: string
    secrets:
      ARTIFACT_S3_PATH:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_ROLE_ARN:
        required: true
      GCP_WORKLOAD_IDENTITY:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true
      GCP_PROJECT_ID:
        required: true


permissions:
  id-token: write
  contents: write 
  repository-projects: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setVariables.outputs.matrix }}
    steps:
      - id: setVariables
        run: |
          echo "::set-output name=matrix::${{ vars.CUSTOMER_ENVS }}"

  publish_artifact:
    name: Publish Artifact to S3
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        customer: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Fetch artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      
      - name: Set note env variables
        env:
          NOTE_REPOSITORY_NAME: ${{ inputs.NOTE_REPOSITORY_NAME }}
        run: |
          echo "NOTE_NAME=$(echo $NOTE_REPOSITORY_NAME | sed 's/note-//')" >> $GITHUB_ENV
            
      - name: Upload artifact to S3 to Customer Path
        env:
          ARTIFACT_S3_PATH: ${{ secrets.ARTIFACT_S3_PATH }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          NOTE_TAG: ${{ inputs.NOTE_TAG }}
        run: |
          aws configure set region $AWS_DEFAULT_REGION
          aws s3 cp artifact.zip ${ARTIFACT_S3_PATH}/${{ matrix.customer }}/${NOTE_NAME}/${NOTE_NAME}_${NOTE_TAG}.zip

      - name: Configure GCP Credentials
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Upload Artifact for GCR
        env:
          NOTE_TAG: ${{ inputs.NOTE_TAG }}
        run: |
          gsutil cp artifact.zip gs://lyric-store-lyric/${{ matrix.customer }}/${NOTE_NAME}/${NOTE_NAME}_${NOTE_TAG}.zip
