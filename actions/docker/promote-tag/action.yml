name: 'Create docker tag'
description: ''
inputs:
  aws_default_region:
    description: 'AWS Default Region name'
  ecr_repository:
    description: 'ECR Repository name'
  aws_role_arn:
    description: 'AWS Role ARN'
  from_tag:
    description: 'Source Tag Name'
  to_tag:
    description: 'Destination Tag Name'
  gcp_project_id:
    description: 'GCP Project ID'
  gcp_workload_identity:
    description: 'GCP Workload Identity'
  gcp_service_account:
    description: 'GCP Service Account'

runs:
  using: "composite"
  steps: 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws_role_arn }}
        aws-region: ${{ inputs.aws_default_region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Promote image to Amazon ECR for release
      env:       
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository }}
      run: |
        # Build a docker container and push it to ECR      
        echo "Retagging image for promotion"
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.from_tag }} || true
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.from_tag }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.to_tag }} || true
        
        echo "Pushing Release Image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.to_tag }} || true
      shell: bash

    - name: 'Authenticate to Google Cloud'
      env:
        GCP_WORKLOAD_IDENTITY:  ${{ inputs.ecr_repository }}
        GCP_SERVICE_ACCOUNT: ${{ inputs.ecr_repository }}
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: $GCP_WORKLOAD_IDENTITY
        service_account: $GCP_SERVICE_ACCOUNT

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Tag, and push image to Google GCR
      env:
        ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository }}
        GCP_PROJECT_ID: ${{ inputs.gcp_project_id }}
      run: |
        echo "Pushing Image to GCR..."
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.from_tag }} gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:${{ inputs.to_tag }} || true
        docker push gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:${{ inputs.to_tag }} || true
