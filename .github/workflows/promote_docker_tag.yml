name: Promote Docker Image

on:
  workflow_call:
    inputs:
      IMAGE_TAG:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
    secrets:
      AWS_DEFAULT_REGION:
        required: true
      AWS_ROLE_ARN:
        required: true
      GCP_WORKLOAD_IDENTITY:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true
      GCP_PROJECT_ID:
        required: true


permissions:
  id-token: write
  contents: write 
  repository-projects: write
  
jobs:
  build_and_publish:
    name: Build and Publish
    runs-on: self-hosted
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Promote image to Amazon ECR for release
      env:
        FROM_IMAGE_TAG: "testing"
        TO_IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"        
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
      run: |
        # Build a docker container and push it to ECR      
        echo "Retagging image for promotion"
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$FROM_IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$FROM_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$TO_IMAGE_TAG
        
        echo "Pushing Release Image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TO_IMAGE_TAG
        echo "::group::Image Tag"
        echo "$TO_IMAGE_TAG"
        echo "::endgroup::"

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Promote image to GCR for release
      env:
        FROM_IMAGE_TAG: "testing"
        TO_IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
        GCP_PROJECT_ID:  ${{ secrets.GCP_PROJECT_ID }}
      run: |
        # Build a docker container and push it to ECR      
        echo "Retagging image for promotion"
        docker pull gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:$FROM_IMAGE_TAG
        docker tag gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:$FROM_IMAGE_TAG gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:$TO_IMAGE_TAG

        echo "Pushing Release Image to ECR..."
        docker push gcr.io/$GCP_PROJECT_ID/$ECR_REPOSITORY:$TO_IMAGE_TAG
        echo "::group::Image Tag"
        echo "$TO_IMAGE_TAG"
        echo "::endgroup::"
